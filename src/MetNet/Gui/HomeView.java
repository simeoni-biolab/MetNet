/*
    MetNet: comparison of Methabolic Networks
*/
package MetNet.Gui;


import MetNet.Models.HomeModel;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/*
 Initial view of the tool 
 */
public class HomeView extends javax.swing.JFrame implements PropertyChangeListener {
    private HomeModel homeModel;
    private OrganismsView orgView;

    // class constructor: form creation
    public HomeView() {
        // reference to the model 
        homeModel = new HomeModel(); 
        homeModel.addChangeListener(this);

        initComponents();
        setSize(700, 500);
        setLocationRelativeTo(null);  
        normalView();        
    }
    
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getNewValue().equals("start"))
            downloadView();
        if (evt.getNewValue().equals("end"))
            normalView();               
    }
    
    
    // standard view of the window 
    protected void normalView() {
        setVisible(true);
        setOrganismBarVisible(false);      
        enableAll();
    }
    
    
    // during the organisms download everything is disabled and the download bar is visible
    private void downloadView() {
        disableAll();         
        setOrganismBarVisible(true);        
        setOrganismBarIntermediate(true);
    }
    
    
    // disabling all windows components 
    private void disableAll(){
        this.updateList.setEnabled(false);
        this.networkAction.setEnabled(false);
    }

    // enabling all windows components    
    private void enableAll(){
        this.updateList.setEnabled(true);
        this.networkAction.setEnabled(true);
    }

            
    // viewing the organisms download bar
    private void setOrganismBarVisible(boolean b) {
        organismBarDownload.setVisible(b);
        
    }
    
    // viewing the organisms download bar as working
    private void setOrganismBarIntermediate(boolean b) {
        organismBarDownload.setIndeterminate(b);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        organismBarDownload = new javax.swing.JProgressBar();
        networkAction = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        updateList = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 500));

        organismBarDownload.setForeground(new java.awt.Color(51, 255, 51));
        organismBarDownload.setToolTipText("");
        organismBarDownload.setString(" ");
        organismBarDownload.setStringPainted(true);

        networkAction.setText("Network Comparison");
        networkAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkActionActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("MetNet - Comparison of Metabolic Networks");

        updateList.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        updateList.setText("Update the local list of organisms (download from KEGG db)");
        updateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(organismBarDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(networkAction, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateList))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(114, 114, 114)
                .addComponent(updateList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23)
                .addComponent(networkAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(organismBarDownload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // network button pressed  
    private void networkActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkActionActionPerformed
        //orgView = new OrganismsView(this);
        this.setVisible(false);
        orgView = new OrganismsView(this);
    }//GEN-LAST:event_networkActionActionPerformed

    // check for updating the local list of organism 
    private void updateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateListActionPerformed
        if (updateList.isSelected()) 
            homeModel.start();  // organisms download
    }//GEN-LAST:event_updateListActionPerformed

   
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton networkAction;
    private javax.swing.JProgressBar organismBarDownload;
    private javax.swing.JCheckBox updateList;
    // End of variables declaration//GEN-END:variables
}
